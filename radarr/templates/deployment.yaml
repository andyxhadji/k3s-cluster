---
# Source: radarr/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: radarr
  labels:
    helm.sh/chart: radarr-1.0.0
    app.kubernetes.io/name: radarr
    app.kubernetes.io/instance: radarr
    app.kubernetes.io/version: "arm32v7-latest"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: radarr
      app.kubernetes.io/instance: radarr
  template:
    metadata:
      labels:
        app: radarr
        app.kubernetes.io/name: radarr
        app.kubernetes.io/instance: radarr
    spec:
      serviceAccountName: radarr
      securityContext:
        {}
      containers:
        - name: radarr
          securityContext:
            {}
          image: "linuxserver/radarr:arm32v7-latest"
          imagePullPolicy: Always
          envFrom:
            - configMapRef:
                name: radarr-env-config
          ports:
            - name: http
              containerPort: 7878
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 60
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 3
          volumeMounts:
            - mountPath: /config
              name: config
            - mountPath: completed/
              subPath: SABnzbd/completed
              name: work
            - mountPath: /movies
              name: movies
          resources:
            {}
      volumes:
      - name: config
        persistentVolumeClaim:
          claimName: radarr-config
      - name: work
        persistentVolumeClaim:
          claimName: sabnzbd-work
      - name: movies
        persistentVolumeClaim:
          claimName: radarr-movies
